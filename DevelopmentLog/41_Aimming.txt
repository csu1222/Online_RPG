
상호작용을 하려면 무엇을 고를 수 있어야 하는데 이때 어떤 방식으로 무엇이든 선택해야 하는데 

트리거 볼륨이라는 볼륨을 배치하고 이 볼륨과 상호작용하는 방식은 어떤 위치에 가면 상호작용이 되는것입니다. 
또 다른 방식은 화면 중앙에 레이를 쏴서 부딛히는 거리를 계산하는 방식은 에임으로 상호작용할 오브젝트를 고를 수 있습니다. 

이 중에 에임으로 선택하는 방식을 구현해볼겁니다. 레이캐스팅이라고 합니다. 

레이캐스팅을 하는 간단한 방법으로 Single Line Trace By Channel 블루프린트 노드로 구현할 수 있습니다. 
이 노드는 시작점과 끝점을 잇는 레이캐스팅을해 채널을 기준으로 충돌을 판정합니다. 

채널로 충돌을 판정하는것 외에도 오브젝트 타입으로 충돌을 판정하는 것도 있는데 이걸로 상호작용가능한 사물들을 골라 줄 수 있을것 같습니다. 

AActor를 상속받은 OR_ENV를 만들고 또 OR_ENV를 상속받은 OR_ItrENV(OnlineRPG_Intreractive Environment) 를 만들었습니다. 
상호작용 가능한 사물과 그렇지 않은 사물을 나눠 상속받아 만들 수 있을겁니다. 

OR_ItrENV를 상속받은 BP_InteractiveENV 를 만듭니다. 또 BP_InteractiveENV를 상속받은 BP_StandingSword를 만들었습니다. 
BP_StandingSword는 플레이어가 무기를 고를때 사용할겁니다. 

일단 모든 상호작용이 되는 물체들은 자기 자신의 메쉬를 가질것이고 또 레이캐스팅할때 어느정도 가까이 에이밍을 해도 그 오브젝트가 선택되도록 하기 위한 
박스 형태의 콜리전 컴포넌트를 BP_InteractiveENV 가 기본적으로 가지고 있게 하겠습니다. 

콜리전 채널을 하나 만들건데 선택범위를 SelectSpace라고 이름 지었는데 이 SelectSpace가 가질 콜리전 프리셋을 만들겁니다. 
언리얼엔진에서 편집->프로젝트세팅->콜리전->ObjectChannel 을 추가하는데 InteractingObject 를 블록으로 만들고 프리셋에 같은 이름으로 만듭니다. 
그 후 SelectSpace의 콜리전 프리셋을 InteractingObject 로 설정합니다. 

레이캐스팅을 C++ 함수로도 만들 수 있는데 함수를 선언할때 
UFUNCTION(BlueprintCallable)
void CheckObjectToAimed(); 
이렇게 선언하면 C++ 함수도 블루 프린트로 사용할 수 있습니다. 
정의 부에서도 
void AOR_MyPlayer::CheckObjectToAimed()
{
	// Trace
	FHitResult HitResult;
	const FVector Start = FollowCamera->GetComponentLocation();
	const FVector End = Start + FollowCamera->GetForwardVector() * AimedRange;
	FCollisionQueryParams CollisionParams;
	CollisionParams.AddIgnoredActor(this);
	if (GetWorld()->LineTraceSingleByChannel(HitResult, Start, End, ECC_Visibility, CollisionParams))
	{
		if (HitResult.GetActor()->IsValidLowLevel())
		{
			// TODO : Aimed 처리
			AActor* HitActor = HitResult.GetActor();
			GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, FString::Printf(TEXT("Hit Actor : %s"), *HitActor->GetName()));
			float HitedRange = (HitResult.ImpactPoint - Start).Size();
			GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, FString::Printf(TEXT("Hited Range : %f"), HitedRange));
		}
	}
}
이렇게 사용하면 됩니다. 


다음은 이제 마이 플레이어의 인터렉팅 키를 누르면 인터렉트 오브젝트인지를 체크후 원하는 동작을 하도록 해야합니다. 

일단 플레이어 상호작용키를 누를때 위의 레이캐스팅을 실행하게 끔 연결해줍니다. 
상호작용은 향상된 입력 중에 AOR_MyPlayer::Interacte 함수가 입력을 받으면 실행됩니다. 

그리고 상호작용을 했을때 에임이 된 오브젝트가 어떤 클래스인지를 가져와 클래스마다의 상호작용을 하고 싶습니다. 
그렇게 하려면 일단 사용하는 오브젝트간의 계층구조를 정립해서 일단 상호작용을 하면 가장 상위 클래스로 가져오고 캐스팅을 해봐서 유효성을 체크하겠습니다. 

게임의 구조에서 가장 위의 오브젝트 클래스는 오브젝트로 설정하고 여기서 크리쳐, 인바이런먼트, 프로젝타일 로 나뉘게 할 것이고 
또 여기서 크리쳐는 플레이어, 몬스터, 엔피씨 등으로 나누고 인바이런 먼트는 그냥 상호작용이 불가능한 인바이런먼트와 상호작용이 가능한 인바이런 먼트로 나눌겁니다. 
언리얼의 클래스들을 활용할것이기 때문에 액터 블루프린트를 한번 만들어 봐서 무엇을 상속받고 있는지 보니 AAcotr 라는 클래스를 상속받고 있었고 
또 AActor는 UObject 를 상속 받고 있었습니다. 
UObject는 언리얼엔진의 중요 클래스중 하나로 이후 파생되는 오브젝트들의 기본클래스 역할을 합니다. 
지금 사용하는 클래스들이 AOR_Env 부터 AActor 를 상속 받고 있고 또 AOR_Env를 상속받는 AOR_Env_ItrAble 이 있습니다. 이 AOR_Env_ItrAble 가 상호작용 가능한 
환경 오브젝트입니다. 거기에 AOR_Player와 AOR_MyPlayer 두가지도 ACharacter 를 상속 받은 AOR_Player를 활용해 만들었습니다. 

이제 상호작용을 하게 되면 AOR_Env_ItrAble 클래스라면 상호작용이 가능하다는 이야기가 되기때문에 HitActor를 AOR_Env_ItrAble 로 캐스팅해보았습니다. 

다음으로 지금 게임이 3인칭 게임인데 레이캐스팅은 카메라 기준으로 레이캐스팅이 되고 있습니다. 그러면 플레이어 캐릭터로부터 상호작용할 사물간의 거리를 
재려면 블럭된 사물과 플레이어 캐릭터의 위치 좌표를 가지고 거리를 계산하면 되겠습니다. 

이제 합쳐서 상호작용한 오브젝트와의 거리와 대상 오브젝트가 OR_ENV_ItrAble 을 상속받고 있는지를 확인하면 



/*
발생한 에러
NU1100 : 'net6.0-windows10.0.19041'에 대해 'Microsoft.Windows.SDK.NET.Ref (= 10.0.19041.55)'을(를) 확인할 수 없습니다. PackageSourceMapping을 사용하도록 설정했습니다. 
다음 원본이 고려되지 않았습니다. C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages, nuget.org.
이 에러는 비주얼 스튜디오의 NuGet 패키지 매니저에서 생긴 에러같습니다. 에러코드 NU1100 는 패키지 아이디를 찾을 수 없다라는 뜻인데 즉 net6.0-windows10.0.19041 이라는 프레임워크가 nuget에서 지원을 하지
않는다는 뜻 같습니다. 이건 이제 net 6.0이 지원이 부족해지고 취약점이 있기 때문인것 같습니다. 일단은 그냥 이대로 사용할 수 있습니다. 

또 다른 에러코드는 
MSB3073 입니다 이 에러코드는 언리얼엔진에 Visual Studio Integration Tool 을 설치하면 통과되었습니다. 

이후 현재 프로젝트의 코드 검사 시스템에 에러가 생겨 언리럴 엔진 5.5 버전으로 다시 만들었습니다.

---
위의 작업 후에 비주얼스튜디오 코드 분석기능에 에러가 생겼습니다. 
.net sdk 라는 프레임워크의 경로에 문제가 생긴것 같습니다. 계속 비주얼스튜디오에 nuget 패키지에 취약성이 있다는 메세지가 나와서 Windows SDK 9.0, 8.0, 6.0 다 깔아봤고 
*/